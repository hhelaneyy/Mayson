import random
import disnake
from disnake.ext import commands
import sqlite3
from core.utilities.embeds import descriptions, errors

conn = sqlite3.connect('Mayson.db')
cursor = conn.cursor()

cursor.execute('''
    CREATE TABLE IF NOT EXISTS logs_channel (
    guild_id INTEGER PRIMARY KEY,
    channel_id INTEGER
    )
''')

cursor.execute('''CREATE TABLE IF NOT EXISTS logs_settings (
                            log_name TEXT PRIMARY KEY,
                            enabled BOOLEAN
                          )''')
conn.commit()

cursor.execute('''CREATE TABLE IF NOT EXISTS bot_settings (
             guild_id INTEGER PRIMARY KEY,
             user_id INTEGER,
             prefix TEXT
             )''')
conn.commit()

class SettingsCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        
    @commands.slash_command(name='settings-logs', description='–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤.')
    @commands.has_permissions(administrator=True)
    async def logs(self, inter: disnake.ApplicationCommandInteraction, channel: disnake.TextChannel):
        guild_id = inter.guild.id
        guild_name = inter.guild.name

        if channel:
            cursor.execute('SELECT channel_id FROM logs_channel WHERE guild_id = ?', (guild_id,))
            existing_channel_id = cursor.fetchone()
        
        if existing_channel_id:
            cursor.execute('UPDATE logs_channel SET channel_id = ? WHERE guild_id = ?', (channel.id, guild_id))
            conn.commit()

            titl = 'üîÑÔ∏è –ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –∏–∑–º–µ–Ω—ë–Ω'
            act = '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–º–µ–Ω—ã –ø—Ä–æ—à–ª–æ–≥–æ –∫–∞–Ω–∞–ª–∞.'
            clr = 0xF2FC58
        else:
            cursor.execute('INSERT INTO logs_channel (guild_id, channel_id) VALUES (?, ?)', (guild_id, channel.id))
            conn.commit()

            titl = '‚úÖ –ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
            act = '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤.'
            clr = 0x84FE9A

        E = disnake.Embed(title=titl, color=clr)
        E.add_field(name='–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:', value=channel.mention)
        E.add_field(name='–î–µ–π—Å—Ç–≤–∏–µ:', value=act)
        E.set_footer(text=random.choice(descriptions), icon_url=self.bot.user.avatar)
        await inter.response.send_message(embed=E)

    #@commands.slash_command(name='settings-prefix', description='–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –¥–ª—è Mayson.')
    #async def prefix(self, inter: disnake.ApplicationCommandInteraction, new_prefix: str = None):
        #try:
            #if new_prefix is None:
                #cursor.execute('DELETE FROM bot_settings WHERE user_id=?', (inter.author.id,))
                #conn.commit()
                #E = disnake.Embed(title='‚≠ê –ü—Ä–µ—Ñ–∏–∫—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.', description='–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ—Ç–∑—ã–≤–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ.', color=0x6be79e)
                #E.add_field(name='–ù–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –≤–∞—Å:', value=f'```mn.```')
                #E.set_footer(text=random.choice(descriptions), icon_url=self.bot.user.avatar)
                #await inter.response.send_message(embed=E, ephemeral=True)
                #return
            
            #cursor.execute("INSERT OR REPLACE INTO bot_settings (user_id, guild_id, prefix) VALUES (?, ?, ?)", (inter.author.id, inter.guild.id, new_prefix))
            #conn.commit()

            #E = disnake.Embed(title='‚≠ê –ü—Ä–µ—Ñ–∏–∫—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.', description='–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –æ—Ç–∑—ã–≤–∞—Ç—å—Å—è –Ω–∞ —ç—Ç–æ.', color=0x6be79e)
            #E.add_field(name='–ù–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –≤–∞—Å:', value=f'```{new_prefix}```')
            #E.set_footer(text=random.choice(descriptions), icon_url=self.bot.user.avatar)
            #await inter.response.send_message(embed=E, ephemeral=True)
        #except Exception as e:
            #print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞: {e}")

def setup(bot: commands.Bot):
    bot.add_cog(SettingsCog(bot))