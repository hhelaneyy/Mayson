import asyncio
import random
import sqlite3
import disnake
from disnake.ext import commands, tasks

class EventsCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.status.start()

    def is_user_forbidden(self, user_id):
        connection = sqlite3.connect('Mayson.db')
        cursor = connection.cursor()
        cursor.execute("SELECT * FROM forbidden_users WHERE user_id = ?", (user_id,))
        forbidden_user = cursor.fetchone()
        connection.close()
        return forbidden_user is not None
    
    async def check_forbidden_users(self):
        for guild in self.bot.guilds:
            creator_id = guild.owner_id
            if self.is_user_forbidden(creator_id):
                await guild.leave()
    
    async def background_task(self):
        while True:
            await self.check_forbidden_users()
            await asyncio.sleep(3600)

    @commands.Cog.listener()
    async def on_ready(self):
        self.bot.loop.create_task(self.background_task())

    @commands.Cog.listener()
    async def on_guild_join(self, guild: disnake.Guild):
        audit = guild.system_channel
        owner = guild.owner_id

        if self.is_user_forbidden(owner):
            await guild.leave()
            return
        else:
            E = disnake.Embed(title='üåå –í–æ—Ç —è –∏ –ø—Ä–∏–±—ã–ª –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä.', description='–Ø —Ä–∞–¥, —á—Ç–æ –≤—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –º–µ–Ω—è –Ω–∞ –≤–∞—à—É –≤–µ—á–µ—Ä–∏–Ω–∫—É. –¢–µ–ø–µ—Ä—å, —è —Å—Ç–∞–Ω—É –≤–∞—à–∏–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å –≤–∞—à —Å–µ—Ä–≤–µ—Ä –Ω–æ–≤—ã–º–∏ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `mn.help` —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ —è –æ–±–ª–∞–¥–∞—é. \n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –≤–æ –≤—Ä–µ–º—è –º–æ–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –∏—Ö –Ω–∞ [–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/MVWBybpf), –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º.', color=0x6b80e7)
            E.set_footer(text='Mayson Hub. –í—Å–µ –ø—Ä–∞–≤–∞ –±—ã–ª–∏ –∑–∞—â–∏—â–µ–Ω—ã.', icon_url=self.bot.user.avatar)
            await audit.send(embed=E)

    @tasks.loop(seconds=1)
    async def status(self):
        all_members = []
        for guild in self.bot.guilds:
            all_members.extend(guild.members)

        if all_members:
            random_member = random.choice(all_members)
            random_username = random_member.name
            
            await self.bot.change_presence(status=disnake.Status.idle, activity=disnake.Activity(name=f'–Ω–∞ {random_username}', type=disnake.ActivityType.watching))
        await asyncio.sleep(15)
        await self.bot.change_presence(status=disnake.Status.idle, activity=disnake.Activity(name="ü§®ü§®ü§®", type=disnake.ActivityType.playing))
        await asyncio.sleep(15)
        await self.bot.change_presence(status=disnake.Status.idle, activity=disnake.Activity(name=f"Poker Night", type=disnake.ActivityType.playing))
        await asyncio.sleep(15)
        await self.bot.change_presence(status=disnake.Status.idle, activity=disnake.Activity(name="SCP-1576.", type=disnake.ActivityType.listening))
        await asyncio.sleep(15)

    @status.before_loop
    async def before_status(self):
        await self.bot.wait_until_ready()

    def cog_unload(self):
        self.status.cancel()

def setup(bot: commands.Bot):
    bot.add_cog(EventsCog(bot))